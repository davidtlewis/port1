url = "https://uk.finance.yahoo.com/quote/VGOV.L/history?period1=1585699200&period2=1586131200&interval=1d&filter=history&frequency=1d"
page = requests.get(url)
contents = page.content
soup = BeautifulSoup(contents, 'html.parser')
rows = soup.table.tbody.find_all("tr")
for table_row in rows:
    columns = table_row.find_all("td")
    if len(column) = 7:
        #save price record
        maybe use uniqueness of data to stop duplicate being added.
        date bit - columns[0].text
    else
         #save div record

    
Open	High	Low	Close*	Adj. close**	



 s = Stock.objects.get(pk=2)


from django.db import models
from django.db.models import Sum
import requests
from bs4 import BeautifulSoup
import locale
from django.utils import timezone
from django.urls import reverse
import datetime
from datetime import datetime
from portfolio.models import Stock, HistoricPrice

s = Stock.objects.get(pk=11)
s.get_historic_prices()

works: time.mktime(date.today().timetuple())


works:
from datetime import datetime

# current date and time
now = datetime.now()

timestamp = datetime.timestamp(now)
print("timestamp =", timestamp)
int(timestamp)

datetime.timestamp(now)

datetime.datetime(2020, 3, 10, 0, 0)

HistoricPrice.objects.filter(stock__nickname="Artemis Euro Opps Fund").last().date
HistoricPrice.objects.filter(stock__nickname="Llyods Pref Share").last().date
testhp = HistoricPrice.objects.filter(stock__nickname="Llyods Pref Share").last()


if testhp is None: print("it is none")

Fixing the date stuff
